{
  "$defs": {
    "data_shape": {
      "consumes": {
        "additionalProperties": false,
        "properties": {
          "format": {
            "default": "application/json",
            "description": "The format of the data that Kafka sends to the sink connector.",
            "enum": [
              "application/json"
            ],
            "type": "string"
          }
        },
        "required": [
          "format"
        ],
        "type": "object"
      }
    },
    "error_handler": {
      "dead_letter_queue": {
        "additionalProperties": false,
        "properties": {
          "topic": {
            "description": "The name of the Kafka topic that serves as a destination for messages which were not processed correctly due to an error.",
            "title": "Dead Letter Topic Name",
            "type": "string"
          }
        },
        "required": [
          "topic"
        ],
        "type": "object"
      },
      "log": {
        "additionalProperties": false,
        "type": "object"
      },
      "stop": {
        "additionalProperties": false,
        "type": "object"
      }
    }
  },
  "additionalProperties": false,
  "properties": {
    "data_shape": {
      "additionalProperties": false,
      "properties": {
        "consumes": {
          "$ref": "#/$defs/data_shape/consumes"
        }
      },
      "type": "object"
    },
    "elasticsearch_cluster_name": {
      "description": "The name of the ElasticSearch cluster.",
      "example": "quickstart",
      "title": "ElasticSearch Cluster Name",
      "type": "string"
    },
    "elasticsearch_enable_s_s_l": {
      "default": true,
      "description": "Specifies to connect by using SSL.",
      "title": "Enable SSL",
      "type": "boolean"
    },
    "elasticsearch_host_addresses": {
      "description": "A comma-separated list of remote transport addresses in `ip:port format`.",
      "example": "quickstart-es-http:9200",
      "title": "Host Addresses",
      "type": "string"
    },
    "elasticsearch_index_name": {
      "description": "The name of the ElasticSearch index.",
      "example": "data",
      "title": "Index in ElasticSearch",
      "type": "string"
    },
    "elasticsearch_password": {
      "oneOf": [
        {
          "description": "The password to connect to ElasticSearch.",
          "format": "password",
          "title": "Password",
          "type": "string"
        },
        {
          "description": "An opaque reference to the elasticsearch_password",
          "properties": {},
          "type": "object"
        }
      ],
      "title": "Password",
      "x-group": "credentials"
    },
    "elasticsearch_user": {
      "description": "The username to connect to ElasticSearch.",
      "title": "Username",
      "type": "string",
      "x-group": "credentials"
    },
    "error_handler": {
      "default": {
        "stop": {}
      },
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "log": {
              "$ref": "#/$defs/error_handler/log"
            }
          },
          "required": [
            "log"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "stop": {
              "$ref": "#/$defs/error_handler/stop"
            }
          },
          "required": [
            "stop"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "dead_letter_queue": {
              "$ref": "#/$defs/error_handler/dead_letter_queue"
            }
          },
          "required": [
            "dead_letter_queue"
          ],
          "type": "object"
        }
      ],
      "type": "object"
    },
    "kafka_topic": {
      "description": "A comma-separated list of Kafka topic names.",
      "title": "Topic Names",
      "type": "string"
    },
    "processors": {}
  },
  "required": [
    "elasticsearch_cluster_name",
    "elasticsearch_host_addresses",
    "kafka_topic"
  ],
  "type": "object"
}
